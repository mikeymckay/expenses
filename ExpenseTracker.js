// Generated by CoffeeScript 1.7.1
var categories, clear, config, db, descriptions, fields, loadTable, updateButtons;

config = {
  local_database_name: "ExpenseTracker",
  remote_url: "https://couchapp:couchapp@expenses.couchappy.com/expenses"
};

clear = function() {
  $("input").val("");
  return $("[name=_id]").val(new Date().toISOString().replace(/:(\d\d)\..*/, ".$1").replace(/T\d/, " "));
};

fields = "Amount,Description,Category,_id,_rev".split(/,/);

$("#AddExpenses").prepend(_(fields).map(function(field) {
  return "<div style='display:block'> <label for='" + field + "'>" + field + "</label><br/> <input name='" + field + "'></input> </div>";
}).join(""));

$("[for=_rev]").hide();

$("[name=_rev]").hide();

$("[name=Amount]").attr("type", "number");

$("label[for=_id]").html("Time");

clear();

categories = [];

descriptions = [];

loadTable = function() {
  categories = [];
  descriptions = [];
  return db.query({
    map: function(doc) {
      if (doc.Amount) {
        return emit(doc.Amount);
      }
    }
  }, {
    include_docs: true
  }, function(error, result) {
    $("#ExpenseList").html("<table id='expenses'> <thead> <tr> " + (_(fields).map(function(field) {
      if (field === "_rev") {
        return;
      }
      if (field === "_id") {
        field = "Time";
      }
      return "<th>" + field + "</th>";
    }).join("")) + " <th></th> </tr> </thead> <tbody> " + (_(result.rows).map(function(row) {
      categories.push(row.doc.Category);
      descriptions.push(row.doc.Description);
      return "<tr>" + (_(fields).map(function(field) {
        if (field === "_rev") {
          return;
        }
        return "<td class='loadOnClick " + field + "'>" + row.doc[field] + "</td>";
      }).join("")) + " <td><button class='delete' data-rev='" + row.doc._rev + "' data-id='" + row.doc._id + "'>Delete</button></td> </tr>";
    }).join("")) + " </tbody> </table>");
    $("#expenses").DataTable({
      "order": [[3, "desc"]]
    });
    return updateButtons();
  });
};

updateButtons = function() {
  $("#CategoryButtons").html("Categories<br/>" + _(categories).chain().uniq().map(function(category) {
    return "<button data-type='Category'>" + category + "</button><br/>";
  }).value().join(""));
  return $("#DescriptionButtons").html("Descriptions<br/>" + _(descriptions).chain().uniq().map(function(description) {
    return "<button data-type='Description'>" + description + "</button><br/>";
  }).value().join(""));
};

db = new PouchDB(config.local_database_name);

loadTable();

$("#ExpenseList").on("click", "button.delete", function(event) {
  var buttonClicked;
  buttonClicked = $(event.target);
  return db.remove(buttonClicked.attr("data-id"), buttonClicked.attr("data-rev")).then(loadTable);
});

$("#CategoryButtons,#DescriptionButtons").on("click", "button", function(event) {
  var buttonClicked;
  buttonClicked = $(event.target);
  return $("[name=" + (buttonClicked.attr("data-type")) + "]").val(buttonClicked.html());
});

$("#ExpenseList").on("click", "td.loadOnClick", function(event) {
  var id;
  id = $(event.target).closest("tr").find("._id").html();
  return db.get(id, function(error, result) {
    return _(fields).each(function(field) {
      return $("[name=" + field + "]").val(result[field]);
    });
  });
});

$("button#Clear").on("click", function() {
  return clear();
});

$("button#Save").on("click", function() {
  var doc, field, _i, _len;
  doc = {};
  for (_i = 0, _len = fields.length; _i < _len; _i++) {
    field = fields[_i];
    doc[field] = $("[name=" + field + "]").val();
  }
  return db.put(doc, function(error, response) {
    return console.log(error);
  }).then(loadTable).then(clear);
});

PouchDB.replicate(config.local_database_name, config.remote_url, {
  continuous: true
}).on('complete', function(response) {
  return console.log(JSON.stringify(response));
}).on('error', function(error) {
  return console.log("ERROR on from replicate: " + (JSON.stringify(error)));
});

PouchDB.replicate(config.remote_url, config.local_database_name, {
  continuous: true
}).on('complete', function(response) {
  return console.log(JSON.stringify(response));
}).on('error', function(error) {
  return console.log("ERROR on from replicate: " + (JSON.stringify(error)));
});

db.changes({
  continuous: true,
  since: "latest",
  onChange: function(change) {
    console.log("Found a change: " + (JSON.stringify(change)));
    return loadTable();
  }
});

//# sourceMappingURL=ExpenseTracker.map
